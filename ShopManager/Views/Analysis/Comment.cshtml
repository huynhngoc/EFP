
@{
    ViewBag.Title = "Comment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--Table Analysis comment-->
<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Thống kê bình luận</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-sm-2 m-b-xs">
                        <label class="font-noraml">Mục đích</label>
                        <select id="intentCommentTable" class="input-sm form-control input-s-sm inline"></select>
                    </div>
                    <div class="col-sm-2 m-b-xs">
                        <label class="font-noraml">Trạng thái</label>
                        <select id="statusCommentTable" class="input-sm form-control input-s-sm inline">
                            <option value="">Tất cả</option>
                            <option value="1">Đang hiển thị</option>
                            <option value="2">Đang cảnh báo</option>
                            <option value="3">Đã ẩn</option>
                            <option value="4">Đã duyệt</option>
                            <option value="5">Đã xóa</option>
                        </select>
                    </div>
                    <div class="col-sm-1 m-b-xs">
                        <label class="font-noraml">Đã đọc</label>
                        <select id="isReadCommentTable" class="input-sm form-control input-s-sm inline">
                            <option value="">Tất cả</option>
                            <option value="true">Đã đọc</option>
                            <option value="false">Chưa đọc</option>
                        </select>
                    </div>
                    <div class="col-sm-3 m-b-xs">
                        <div class="form-group" id="dateRange">
                            <label class="font-noraml">Thời gian</label>
                            <div class="input-daterange input-group" id="datepicker">
                                <input type="text" id="startDateCommentTable" class="input-sm form-control" name="start" value="" readonly>
                                <span class="input-group-addon">to</span>
                                <input type="text" id="endDateCommentTable" class="input-sm form-control" name="end" value="" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2 m-b-xs pull-right">
                        <button class="col-sm-4 btn btn-primary" style="margin-top:22px" onclick="filterCommentTable(true), GetPieChartData(), GetStackChartData()"><i class="fa fa-filter"></i>&nbsp;Lọc</button>
                        <button class="col-sm-6 btn btn-success pull-right" style="margin-top:22px" onclick="filterCommentTable(false), GetPieChartData(), GetStackChartData()"><i class="fa fa-refresh"></i>&nbsp;Làm mới</button>
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <h5>Thống kê tỉ lệ bình luận</h5>
                            </div>
                            <div class="ibox-content">
                                <div>
                                    <div id="pieChart"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <h5>Thống kê bình luận theo thời gian</h5>
                            </div>
                            <div class="ibox-content">
                                <div>
                                    <div id="stockedChart"></div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-bordered table-hover" id="tblAnalysisByComment" style="width:100%">
                        <thead>
                            <tr>
                                <th><input id="checkAllCommentTable" type="checkbox" onchange="selectAllComment()"></th>
                                <th>Bình luận</th>
                                <th>Bài đăng</th>
                                <th>Người đăng</th>
                                <th>Mục đích</th>
                                <th>Thời gian</th>
                                <th>Trạng thái</th>
                                <th>Đã đọc</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th>Bình luận</th>
                                <th>Bài đăng</th>
                                <th>Người đăng</th>
                                <th>Mục đích</th>
                                <th>Thời gian</th>
                                <th>Trạng thái</th>
                                <th>Đã đọc</th>
                                <th>Thao tác</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>
<!--./Table Analysis comment-->
<!--Table Analysis comment by user-->
<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Thống kê người sử dụng</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-sm-3 m-b-xs">
                        <div class="form-group" id="dateRange">
                            <label class="font-noraml">Thời gian</label>
                            <div class="input-daterange input-group" id="datepicker">
                                <input type="text" id="startDateUserTable" class="input-sm form-control" name="start" value="" readonly>
                                <span class="input-group-addon">to</span>
                                <input type="text" id="endDateUserTable" class="input-sm form-control" name="end" value="" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2 col-sm-offset-7 m-b-xs">
                        <button class="col-sm-4 btn btn-primary" style="margin-top:22px" onclick="filterUserTable(true)"><i class="fa fa-filter"></i>&nbsp;Lọc</button>
                        <button class="col-sm-6 btn btn-success pull-right" style="margin-top:22px" onclick="filterUserTable(false)"><i class="fa fa-refresh"></i>&nbsp;Làm mới</button>
                    </div>

                </div>

                <div class="table-responsive">

                    <table class="table table-bordered table-hover" id="tblAnalysisByUser" style="width:100%">
                        <thead>
                            <tr>
                                <th>Tên Người dùng</th>
                                <th>Tổng comment</th>
                                <th>Chưa đọc</th>
                                <th>Mục đích</th>
                                <th>Trạng thái</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <th>Tên Người dùng</th>
                                <th>Tổng comment</th>
                                <th>Chưa đọc</th>
                                <th>Mục đích</th>
                                <th>Trạng thái</th>
                                <th>Thao tác</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>
<!--./Table Analysis comment by user-->
<!--Table Analysis Post by Page-->
<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Thống kê bài đăng của bạn</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-sm-3 m-b-xs">
                        <div class="form-group" id="dateRange">
                            <label class="font-noraml">Thời gian</label>
                            <div class="input-daterange input-group" id="datepicker">
                                <input type="text" id="startDateAnalysisPostByPage" class="input-sm form-control" name="start" value="" readonly>
                                <span class="input-group-addon">to</span>
                                <input type="text" id="endDateAnalysisPostByPage" class="input-sm form-control" name="end" value="" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2 col-sm-offset-7 m-b-xs">
                        <button class="col-sm-4 btn btn-primary" style="margin-top:22px" onclick="filterPostTable(true)"><i class="fa fa-filter"></i>&nbsp;Lọc</button>
                        <button class="col-sm-6 btn btn-success pull-right" style="margin-top:22px" onclick="filterPostTable(false)"><i class="fa fa-refresh"></i>&nbsp;Làm mới</button>
                    </div>

                </div>

                <div class="table-responsive">

                    <table class="table table-bordered table-hover" id="tblAnalysisPostByPage" style="width:100%">
                        <thead>
                            <tr>
                                <th><input id="checkAllPostTbl" type="checkbox" onchange="checkAllPost()"></th>
                                <th>Bài đăng</th>
                                <th>Người đăng</th>
                                <th>Thích</th>
                                <th>Chia sẻ</th>
                                <th>Bình luận</th>
                                <th>Mục đích</th>
                                <th>Trạng thái</th>
                                <th>Đã đọc</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th>Bài đăng</th>
                                <th>Người đăng</th>
                                <th>Thích</th>
                                <th>Chia sẻ</th>
                                <th>Bình luận</th>
                                <th>Mục đích</th>
                                <th>Trạng thái</th>
                                <th>Đã đọc</th>
                                <th>Thao tác</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!--./Table Analysis Post by Page-->
<!--Modal User comment detail-->
<div class="modal inmodal fade" id="tblUserCommentDetailModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="width:80%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Đóng</span></button>
                <h4 class="modal-title">Chi tiết bình luận người dùng</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-2 m-b-xs">
                        <div class="btn-group" style="margin-top:22px">
                            <button id="selectAllButtonUserCommentDetail" data-toggle="dropdown" class="btn btn-default dropdown-toggle">Đã chọn 0 bình luận &nbsp;<span class="caret"></span></button>
                            <ul class="dropdown-menu">
                                <li><a href="javascript:void(0)" onclick="hideAllCommentDetail(true)">Ẩn những bình luận đã chọn</a></li>
                                <li><a href="javascript:void(0)" onclick="hideAllCommentDetail(false)">Bỏ ẩn những bình luận đã chọn</a></li>
                                <li><a href="javascript:void(0)" onclick="deleteAllCommentDetail()">Xóa những comment đã chọn</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-sm-2 m-b-xs">
                        <label class="font-noraml">Mục đích</label>
                        <select id="userCommentDetailIntentDDL" class="input-sm form-control input-s-sm inline"></select>
                    </div>
                    <div class="col-sm-2 m-b-xs">
                        <label class="font-noraml">Trạng thái</label>
                        <select id="userCommentDetailStatusDDL" class="input-sm form-control input-s-sm inline">
                            <option value="">Tất cả</option>
                            <option value="1">Đang hiển thị</option>
                            <option value="2">Đang cảnh báo</option>
                            <option value="3">Đã ẩn</option>
                            <option value="4">Đã duyệt</option>
                            <option value="5">Đã xóa</option>
                        </select>
                    </div>
                    <div class="col-sm-2 m-b-xs">
                        <label class="font-noraml">Đã đọc</label>
                        <select id="userCommentDetailIsReadDDL" class="input-sm form-control input-s-sm inline">
                            <option value="">Tất cả</option>
                            <option value="true">Đã đọc</option>
                            <option value="false">Chưa đọc</option>
                        </select>
                    </div>

                    <div class="col-sm-3 m-b-xs">
                        <button class="col-sm-4 btn btn-primary" style="margin-top:22px" onclick="filterUserDetailTable(true)"><i class="fa fa-filter"></i>&nbsp;Lọc</button>
                        <button class="col-sm-6 btn btn-success pull-right" style="margin-top:22px" onclick="filterUserDetailTable(false)"><i class="fa fa-refresh"></i>&nbsp;Làm mới</button>
                    </div>

                </div>

                <div class="table-responsive">
                    <table class="table table-bordered table-hover" id="tblUserCommentDetail" style="width:100%">
                        <thead>
                            <tr>
                                <th><input id="checkAllCommentDetailTable" type="checkbox" onchange="checkAllCommentDetailTbl()"></th>
                                <th>Bình luận</th>
                                <th>Bài đăng</th>
                                <th>Mục đích</th>
                                <th>Thời gian</th>
                                <th>Trạng thái</th>
                                <th>Đã đọc</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th>Bình luận</th>
                                <th>Bài đăng</th>
                                <th>Mục đích</th>
                                <th>Thời gian</th>
                                <th>Trạng thái</th>
                                <th>Đã đọc</th>
                                <th>Thao tác</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<!--./Modal User detail-->
<!--Modal User Profile-->
<div class="modal inmodal fade" id="userDetailModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="width:90%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Đóng</span></button>
                <h4 class="modal-title">Thông tin người dùng</h4>
            </div>
            <div class="modal-body">
                <p>Abc</p>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary">Lưu lại</button>
            </div>
        </div>
    </div>
</div>
<!--./Modal User profile-->




@section CustomCSS
{
    @Styles.Render("~/Toastr-style")
    @Styles.Render("~/DataTable-CSS")
    @Styles.Render("~/Data-picker-CSS")
    @Styles.Render("~/SweetAlert-CSS")
    @Styles.Render("~/C3Chart-CSS")
}

@section CustomJS
{
    @Scripts.Render("~/DataTable-JS")
    <!--Toastr JS-->
    @Scripts.Render("~/Toastr")
    @Scripts.Render("~/SweetAlert-JS")

    @Scripts.Render("~/C3Chart-JS")
    <script>
        // Get firstday of month and current day
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd
        }
        if (mm < 10) {
            mm = '0' + mm
        }
        today = yyyy + '/' + mm + '/' + dd;
        var firstDay = yyyy + '/' + mm + '/' + '01';

        //Set first day and current day to date picker
        //Comment table
        $('#startDateCommentTable').attr("value", firstDay);
        $('#endDateCommentTable').attr("value", today);
        //User table
        $('#startDateUserTable').attr("value", firstDay);
        $('#endDateUserTable').attr("value", today);

        $('#startDateAnalysisPostByPage').attr("value", firstDay);
        $('#endDateAnalysisPostByPage').attr("value", today);

    </script>
    @Scripts.Render("~/Data-picker-JS")
    <script>

        $('#dateRange .input-daterange').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            autoclose: true,
            format: "yyyy/mm/dd"
        });
        var listSelectedComment = [];
        var listSelectedCommentDetailTable = [];
        var listSelectedPost = [];
        var statusArray = ["Đang hiện", "Cảnh báo", "Đã ẩn", "Đã duyệt", "Đã xóa"];
        var listIntent;
        //Datatable
        var commentDataTable;
        var userDataTable;
        var userCommentDetailDataTable;
        var postDataTable;

        var languageConfig = {
            "oPaginate": {
                "sNext": "Tiếp",
                "sLast": "Cuối",
                "sPrevious": "Trước",
                "sFirst": "Đầu"
            },
            "sInfo": "Kết quả từ _START_ đến _END_ trong số _TOTAL_",
            "sInfoEmpty": "Chưa có dữ liệu",
            "sEmptyTable": "Chưa có dữ liệu",
            "sInfoThousands": ".",
            "sLoadingRecords": "Đang tải ...",
            "sProcessing": "Đang xử lý ...",
            "sSearch": "Tìm kiếm:",
            "sZeroRecords": "Không tìm thấy kết quả",
            "sInfoFiltered": " - lọc ra từ _MAX_ kết quả",
            "sLengthMenu": "Hiển thị _MENU_ kết quả",
        };
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "progressBar": false,
            "preventDuplicates": false,
            "positionClass": "toast-top-right",
            "onclick": null,
            "showDuration": "100",
            "hideDuration": "100",
            "timeOut": "3000",
            "extendedTimeOut": "500",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        $(document).ready(function () {
            //Load Chart
            GetPieChartData();
            GetStackChartData();
            //Load Intent dropdown list
            loadIntent();
            //Comment Table
            commentDataTable = $('#tblAnalysisByComment').DataTable({
                "iDisplayLength": 10,
                "bProcessing": true,
                "bServerSide": true,
                "sAjaxSource": "/Analysis/GetCommentByShopAndCondition",
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "fbId", "value": null });
                    aoData.push({ "name": "intentId", "value": $('#intentCommentTable').val() });
                    aoData.push({ "name": "status", "value": $('#statusCommentTable').val() });
                    aoData.push({ "name": "isRead", "value": $('#isReadCommentTable').val() });
                    aoData.push({ "name": "startDate", "value": $('#startDateCommentTable').val() });
                    aoData.push({ "name": "endDate", "value": $('#endDateCommentTable').val().concat(" 23:59:59.000") });
                },
                "sDom": 'l<"CommentToolbar">rtip',
                "aoColumnDefs": [
                        { "mData": function (source) { return "<input type='checkbox' value='" + source.Id + "' onchange='selectRowCommentTable(this)'>" }, "aTargets": [0], "width": "1%", "bSortable": false },
                        { "mData": function (source) { return "<a href='https://www.facebook.com/" + source.Id + "' target='_blank' onclick='setCommentIsRead(\"" + source.Id + "\")'>" + source.CommentContent + "</a>" }, "aTargets": [1], "width": "15%", "bSortable": false },
                        { "mData": function (source) { return "<a href='https://www.facebook.com/" + source.PostId + "' target='_blank' onclick='setPostIsRead(\"" + source.PostId + "\")'>" + source.PostContent + "</a>" }, "aTargets": [2], "width": "15%" },
                        {
                            "mData": function (source) {
                                var rs = "<a href='https://www.facebook.com/" + source.SenderFbId + "' target='_blank'>" + source.SenderName + "</a>";
                                if (source.IsCustomer == true) {
                                    rs = rs + " (Khách hàng)"
                                };
                                return rs;

                            }, "aTargets": [3], "width": "15%"
                        },
                        {
                            "mData": function (source) {
                                var rs = "<select class='input-sm' onchange='setCommentIntent(\"" + source.Id + "\",this)'><option value='" + source.IntentId + "'>" + source.IntentName + "</option>";
                                for (var i = 0; i < listIntent.length; i++) {
                                    if (listIntent[i].Id != source.IntentId) {
                                        rs = rs + "<option value='" + (i + 1) + "'>" + listIntent[i].IntentName + "</option>";
                                    }
                                };
                                rs = rs + "</select>";
                                return rs;
                            }, "aTargets": [4], "width": "7%"
                        },
                        { "mData": function (source) { return FormatDateVN(source.DateCreated) }, "aTargets": [5], "width": "10%" },
                        { "mData": function (source) { return statusArray[source.Status - 1] }, "aTargets": [6], "width": "7%" },
                        { "mData": function (source) { if (source.IsRead == true) { return "<i class='fa fa-check-square-o' style='font-size:20px'></i>" } else { return null } }, "aTargets": [7], "width": "5%" },
                        {
                            "mData": function (source) {
                                var rs = "<div class='btn-group' style='height:100%'>";
                                if (source.Status == 1 || source.Status == 4) {
                                    rs = rs + "<button class='btn btn-sm btn-warning' onclick='hideComment(\"" + source.Id + "\",true)'>Ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 2) {
                                    rs = rs + "<button class='btn btn-sm btn-info' onclick='approveComment(\"" + source.Id + "\")'>Duyệt</button>" + "<button class='btn btn-sm btn-warning' onclick='hideComment(\"" + source.Id + "\",true)'>Ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 3) {
                                    rs = rs + "<button class='btn btn-sm btn-success' onclick='hideComment(\"" + source.Id + "\",false)'>Bỏ ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 5) {
                                    return null;
                                }
                                rs = rs + "</div>";
                                return rs;
                            }, "aTargets": [8], "width": "10%"
                        },
                ],
                "fnInitComplete": function (oSetting, json) {
                    $('#tblAnalysisByComment').removeAttr("style");
                },
                oLanguage: languageConfig
            })
            $("div.CommentToolbar").html("<div class='col-sm-2'>" +
                        "<div class='btn-group'>" +
                            "<button id='selectAllCommentTable' data-toggle='dropdown' class='btn btn-default dropdown-toggle'>Đã chọn 0 bình luận&nbsp;<span class='caret'></span></button>" +
                            "<ul class='dropdown-menu'>" +
                                "<li><a href='javascript:void(0)' onclick='hideAllComment(true)'>Ẩn những bình luận đã chọn</a></li>" +
                                "<li><a href='javascript:void(0)' onclick='hideAllComment(false)'>Bỏ ẩn những bình luận đã chọn</a></li>" +
                                "<li><a href='javascript:void(0)' onclick='deleteAllComment()'>Xóa những bình luận đã chọn</a></li>" +
                            "</ul>" +
                        "</div>" +
                    "</div>");
            //User Table
            userDataTable = $('#tblAnalysisByUser').DataTable({
                "iDisplayLength": 10,
                "bProcessing": true,
                "bServerSide": true,
                "sAjaxSource": "/Analysis/GetUserList",
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "startDate", "value": $('#startDateUserTable').val() });
                    aoData.push({ "name": "endDate", "value": $('#endDateUserTable').val().concat(" 23:59:59.000") });
                },
                "sDom": 'lrtip',
                "aoColumnDefs": [
                        {
                            "mData": function (source) {
                                if (source.IsCustomer == true) {
                                    return "<a href='https://www.facebook.com/" + source.UserFBId + "' target='_blank'>" + source.UserName + "</a> (Khách hàng)";
                                } else {
                                    return "<a href='https://www.facebook.com/" + source.UserFBId + "' target='_blank'>" + source.UserName + "</a>";
                                }
                            }, "aTargets": [0], width: "15%"
                        },
                        { "mData": function (source) { return source.TotalComment }, "aTargets": [1], width: "5%" },
                        { "mData": function (source) { return source.UnreadComment }, "aTargets": [2], width: "5%" },
                        {
                            "mData": function (source) {
                                var rs = "";
                                for (var i = 0; i < source.ListIntentNumber.length; i++) {
                                    rs = rs + source.ListIntentNumber[i].IntentName + " :" + source.ListIntentNumber[i].IntentCount + " || ";
                                }
                                return rs;
                            }, "aTargets": [3], width: "20%"
                        },
                        {
                            "mData": function (source) {
                                var rs = "";
                                for (var i = 0; i < source.ListStatusNumber.length; i++) {
                                    rs = rs + source.ListStatusNumber[i].StatusName + " :" + source.ListStatusNumber[i].StatusCount + " || ";
                                }
                                return rs;
                            }, "aTargets": [4], width: "20%"
                        },
                        { "mData": function (source) { return "<button class='btn btn-info' onclick='showUserCommentDetail(" + source.UserFBId + ")'><i class='fa fa-list-ul'></i>&nbsp;Chi tiết</button>" }, "aTargets": [5], width: "5%" }
                ],
                "fnInitComplete": function (oSetting, json) {
                    $('#tblAnalysisByUser').removeAttr("style");
                },
                oLanguage: languageConfig
            })

            postDataTable = $('#tblAnalysisPostByPage').DataTable({
                "iDisplayLength": 10,
                "bProcessing": true,
                "bServerSide": true,
                "sAjaxSource": "/Analysis/GetPostByTime",
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "startDate", "value": $('#startDateAnalysisPostByPage').val() });
                    aoData.push({ "name": "endDate", "value": $('#endDateAnalysisPostByPage').val().concat(" 23:59:59.000") });
                },
                "sDom": 'l<"PostToolBar">rtip',
                "aoColumnDefs": [
                        {
                            "mData": function (source) {
                                if (source.IntentId != null) {
                                    return "<input type='checkbox' value='" + source.PostId + "' onchange='checkBoxCheckedPostTbl(this)'>"
                                } else {
                                    return null;
                                }
                            }, "aTargets": [0], "width": "1%", "bSortable": false
                        },
                        {
                            "mData": function (source) { return "<a href='https://www.facebook.com/" + source.PostId + "' target='_blank' onclick='setPostIsRead(\"" + source.PostId + "\")'>" + source.PostContent + "</a>" }, "aTargets": [1], width: "15%"
                        },
                        {
                            "mData": function (source) {
                                var rs = "<a href='https://www.facebook.com/" + source.SenderFBId + "' target='_blank'>" + source.SenderFBName + "</a>";
                                if (source.IsCustomer == true) {
                                    rs = rs + " (Khách hàng)"
                                };
                                return rs;
                            }, "aTargets": [2], width: "10%"
                        },
                        {
                            "mData": "LikeCount", "aTargets": [3], width: "5%"
                        },
                        {
                            "mData": "ShareCount", "aTargets": [4], width: "5%"
                        },
                        {
                            "mData": "CommentCount", "aTargets": [5], width: "5%"
                        },
                        {
                            "mData": function (source) {
                                if (source.IntentId != null) {
                                    var rs = "<select class='input-sm' onchange='setPostIntent(\"" + source.PostId + "\",this)'><option value='" + source.IntentId + "'>" + source.IntentName + "</option>";
                                    for (var i = 0; i < listIntent.length; i++) {
                                        if (listIntent[i].Id != source.IntentId) {
                                            rs = rs + "<option value='" + (i + 1) + "'>" + listIntent[i].IntentName + "</option>";
                                        }
                                    };
                                    rs = rs + "</select>";
                                    return rs;
                                } else {
                                    return null;
                                }
                            }, "aTargets": [6], "width": "7%"
                        },
                        {
                            "mData": function (source) { return statusArray[source.Status - 1] }, "aTargets": [7], width: "5%"
                        },
                        { "mData": function (source) { if (source.IsRead == true) { return "<i class='fa fa-check-square-o' style='font-size:20px'></i>" } else { return null } }, "aTargets": [8], "width": "5%" },
                        {
                            "mData": function (source) {
                                var rs = "<div class='btn-group' style='height:100%'>";
                                if (source.Status == 1 || source.Status == 4) {
                                    rs = rs + "<button class='btn btn-sm btn-warning' onclick='hidePost(\"" + source.PostId + "\",true)'>Ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deletePost(\"" + source.PostId + "\")'>Xóa</button>";
                                }
                                if (source.Status == 3) {
                                    rs = rs + "<button class='btn btn-sm btn-success' onclick='hidePost(\"" + source.PostId + "\",false)'>Bỏ ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deletePost(\"" + source.PostId + "\")'>Xóa</button>";
                                }
                                if (source.Status == 5) {
                                    return null;
                                }
                                rs = rs + "</div>";
                                return rs;
                            }, "aTargets": [9], "width": "10%"
                        },
                ],
                "fnInitComplete": function (oSetting, json) {
                    $('#tblAnalysisByUser').removeAttr("style");
                },
                oLanguage: languageConfig
            })
            $("div.PostToolBar").html("<div class='col-sm-2'>" +
                        "<div class='btn-group'>" +
                            "<button id='selectAllButtonPostTbl' data-toggle='dropdown' class='btn btn-default dropdown-toggle'>Đã chọn 0 bài đăng&nbsp;<span class='caret'></span></button>" +
                            "<ul class='dropdown-menu'>" +
                                "<li><a href='javascript:void(0)' onclick='hideAllPost(true)'>Ẩn những bài đăng đã chọn</a></li>" +
                                "<li><a href='javascript:void(0)' onclick='hideAllPost(false)'>Bỏ ẩn những bài đăng đã chọn</a></li>" +
                                "<li><a href='javascript:void(0)' onclick='deleteAllPost()'>Xóa những bài đăng đã chọn</a></li>" +
                            "</ul>" +
                        "</div>" +
                    "</div>");
        })
        $('#dateRange .input-daterange').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            autoclose: true,
            format: "yyyy/mm/dd"
        });

        //Get pie chart data
        function GetPieChartData() {
            $.ajax({
                url: "/Analysis/GetAnalysisDataByTime",
                data: {
                    intentId: $('#intentCommentTable').val(),
                    status: $('#statusCommentTable').val(),
                    isRead: $('#isReadCommentTable').val(),
                    startDate: $('#startDateCommentTable').val(),
                    endDate: $('#endDateCommentTable').val().concat(" 23:59:59.000"),
                    divideNumber: 1
                },
                dataType: "json",
                type: "post",
                success: function (result) {
                    var dataForPie = [];
                    for (var i = 0; i < result.length; i++) {
                        dataForPie.push([result[i].IntentName, result[i].CommentNumber]);
                    };
                    c3.generate({
                        bindto: '#pieChart',
                        data: {
                            columns: dataForPie,
                            type: 'pie'
                        },
                        pie: {
                            label: {
                                format: function (value, ratio, id) {
                                    return (value);
                                }
                            }
                        }
                    });
                },
                error: function () {
                    console.log("Get data for pie char error");
                }
            })
        }

        //Get stack chart data
        function GetStackChartData() {
            $.ajax({
                url: "/Analysis/GetAnalysisDataByTime",
                data: {
                    intentId: $('#intentCommentTable').val(),
                    status: $('#statusCommentTable').val(),
                    isRead: $('#isReadCommentTable').val(),
                    startDate: $('#startDateCommentTable').val(),
                    endDate: $('#endDateCommentTable').val().concat(" 23:59:59.000"),
                    divideNumber: 8
                },
                dataType: "json",
                type: "post",
                success: function (result) {
                    var dataStack = [];
                    var title = [];
                    var TimeCategory = [];
                    for (var i = 0; i < result[0].ListData.length; i++) {
                        title.push(result[0].ListData[i].IntentName);
                    }
                    dataStack.push(title);
                    for (var j = 0; j < result.length; j++) {
                        TimeCategory.push(FormatDateVN(result[j].Time))
                        var dataRow = [];
                        for (var i = 0; i < result[j].ListData.length; i++) {
                            dataRow.push(result[j].ListData[i].CommentNumber);
                        }
                        dataStack.push(dataRow);
                    }
                    c3.generate({
                        bindto: '#stockedChart',
                        data: {
                            rows: dataStack,
                        },
                        axis: {
                            x: {
                                type: 'category',
                                categories: TimeCategory
                            }
                        }
                    });
                },
                error: function () {
                    console.log("Get data for bar char error");
                }
            })
        }

        //Function for Comment table
        //Fileter Comment Table
        function filterCommentTable(loadFromStart) {
            listSelectedComment = [];
            $('#selectAllCommentTable').empty();
            $('#selectAllCommentTable').append("Đã chọn " + listSelectedComment.length + " bình luận&nbsp; <span class='caret'></span>");
            if (loadFromStart == true) {
                commentDataTable.ajax.reload();
            } else {
                commentDataTable.ajax.reload(null, false);
            }
        }

        //Check all comment
        function selectAllComment() {
            $('#selectAllCommentTable').empty();
            if ($('#checkAllCommentTable').is(':checked')) {
                listSelectedComment.splice(0, listSelectedComment.length);
                $('#tblAnalysisByComment').find("tbody > tr > td > input").each(function () {
                    $(this).parent().parent().addClass("active");
                    $(this).prop('checked', true);
                    listSelectedComment.push($(this).val());
                });
            } else {
                listSelectedComment.splice(0, listSelectedComment.length);
                $('#tblAnalysisByComment').find("tbody > tr > td > input").each(function () {
                    $(this).parent().parent().removeClass("active");
                    $(this).prop('checked', false);
                });
            }
            $('#selectAllCommentTable').append("Đã chọn " + listSelectedComment.length + " bình luận &nbsp;<span class='caret'></span>");
            console.log(listSelectedComment);
        }

        //Selected comment
        function selectRowCommentTable(checkbox) {
            if ($('#checkAllCommentTable').is(':checked')) {
                $('#checkAllCommentTable').prop('checked', false);
            }
            if ($(checkbox).is(':checked')) {
                $(checkbox).closest("tr").addClass("active");
                listSelectedComment.push(checkbox.value);
                console.log(listSelectedComment);
            } else {
                $(checkbox).closest("tr").removeClass("active");
                for (var i = 0; i < listSelectedComment.length; i++) {
                    if (listSelectedComment[i] == checkbox.value) {
                        listSelectedComment.splice(i, 1);
                    }
                }
                console.log(listSelectedComment);
            }
            $('#selectAllCommentTable').empty();
            $('#selectAllCommentTable').append("Đã chọn " + listSelectedComment.length + " bình luận &nbsp;<span class='caret'></span>");
        }

        //Set Commnet is read
        function setCommentIsRead(commentId) {
            $.ajax({
                url: "/Analysis/SetCommentIsRead",
                dataType: "json",
                type: "post",
                data: { commentId: commentId },
                success: function (data) {
                    if (data == true) {
                        commentDataTable.ajax.reload(null, false);
                        userDataTable.ajax.reload(null, false);
                        if (userCommentDetailDataTable != null) {
                            userCommentDetailDataTable.ajax.reload(null, false);
                        }
                    }
                },
                error: function () {
                    console.log("Set comment is read failed!");
                }
            })
        }

        //Set Post is read
        function setPostIsRead(postId) {
            $.ajax({
                url: "/Analysis/SetPostIsRead",
                dataType: "json",
                type: "post",
                data: { postId: postId },
                success: function (data) {
                    if (data == true) {
                        commentDataTable.ajax.reload(null, false);
                        postDataTable.ajax.reload(null, false);
                        if (userCommentDetailDataTable != null) {
                            userCommentDetailDataTable.ajax.reload(null, false);
                        }
                    }
                },
                error: function () {
                    console.log("Set post is read fail failed!");
                }
            })
        }

        //Set comment intent onchange
        function setCommentIntent(commentId, intentList) {
            $.ajax({
                url: "/Analysis/SetCommentIntent",
                dataType: "json",
                type: "post",
                data: {
                    commentId: commentId,
                    intentId: intentList.value
                },
                type: "post",
                success: function (data) {
                    GetPieChartData();
                    GetStackChartData();
                    toastr.success("Cập nhật thành công");
                },
                error: function () {
                    toastr.error("Cập nhật thất bại");
                }
            })
        }

        //Delete comment by id
        function deleteComment(commentId) {
            swal({
                title: "Bạn có chắc chắn xóa bình luận?",
                text: "Bạn không thể khôi phục sau khi xóa!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Xóa",
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        url: "/Analysis/DeleteComment",
                        dataType: "json",
                        type: "post",
                        async: false,
                        data: {
                            commentId: commentId
                        },
                        type: "post",
                        success: function (data) {
                            if (data.errorNumber == 0) {
                                commentDataTable.ajax.reload(null, false);
                                userDataTable.ajax.reload(null, false);
                                swal({
                                    title: "Đã xóa!",
                                    text: "Đã xóa bình luận thành công",
                                    timer: 2000,
                                    type: "success"
                                });
                            } else {
                                swal({
                                    title: "Thất bại!",
                                    text: "Xóa bình luận thất bại",
                                    timer: 2000,
                                    type: "error"
                                });
                            }
                        },
                        error: function () {
                            swal({
                                title: "Thất bại!",
                                text: "Xóa bình luận thất bại",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    })
                }
            });
        }

        //Delete all comment by id
        function deleteAllComment() {
            swal({
                title: "Bạn có chắc chắn xóa các bình luận?",
                text: "Bạn không thể khôi phục sau khi xóa!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Xóa",
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        url: "/Analysis/DeleteComment",
                        dataType: "json",
                        type: "post",
                        async: false,
                        data: {
                            commentId: listSelectedComment
                        },
                        type: "post",
                        success: function (data) {
                            commentDataTable.ajax.reload(null, false);
                            userDataTable.ajax.reload(null, false);
                            listSelectedComment = [];
                            if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                                swal({
                                    title: "Đã xóa!",
                                    text: "Xóa " + data.totalComment + " bình luận thành công",
                                    timer: 2000,
                                    type: "success"
                                });
                            } else {
                                swal({
                                    title: "Thất bại!",
                                    text: data.errorNumber + " bình luận chưa được xóa",
                                    timer: 2000,
                                    type: "error"
                                });
                            }
                        },
                        error: function () {
                            commentDataTable.ajax.reload(null, false);
                            userDataTable.ajax.reload(null, false);
                            listSelectedComment = [];
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bình luận chưa được xóa",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    })
                }
            })
        }

        //Hide / Unhide a Comment by Id
        function hideComment(commentId, isHide) {
            $.ajax({
                url: "/Analysis/HideComment",
                dataType: "json",
                type: "post",
                data: {
                    commentId: [commentId],
                    isHide: isHide
                },
                type: "post",
                success: function (data) {
                    if (isHide) {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            commentDataTable.ajax.reload(null, false);
                            userDataTable.ajax.reload(null, false);
                            swal({
                                title: "Đã ẩn!",
                                text: "Ẩn bình luận thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: "Ẩn bình luận thất bại",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    } else {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            commentDataTable.ajax.reload(null, false);
                            userDataTable.ajax.reload(null, false);
                            swal({
                                title: "Đã bỏ ẩn!",
                                text: "Bỏ ẩn bình luận thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: "Bỏ ẩn bình luận thất bại",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    }
                },
                error: function () {
                    if (isHide) {
                        swal({
                            title: "Thất bại!",
                            text: "Ẩn bình luận thất bại",
                            timer: 2000,
                            type: "error"
                        });
                    } else {
                        swal({
                            title: "Thất bại!",
                            text: "Bỏ ẩn bình luận thất bại",
                            timer: 2000,
                            type: "error"
                        });
                    }
                }
            })
        }

        //Hide / Unhide all Comment by Id
        function hideAllComment(isHide) {
            $.ajax({
                url: "/Analysis/HideComment",
                dataType: "json",
                type: "post",
                async: false,
                data: {
                    commentId: listSelectedComment,
                    isHide: isHide
                },
                type: "post",
                success: function (data) {
                    commentDataTable.ajax.reload(null, false);
                    userDataTable.ajax.reload(null, false);
                    listSelectedComment = [];
                    if (isHide) {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            swal({
                                title: "Thành công!",
                                text: "Ẩn " + data.totalComment + " bình luận thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bình luận chưa được ẩn",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    } else {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            swal({
                                title: "Thành công!",
                                text: "Bỏ ẩn " + data.totalComment + " bình luận thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bình luận chưa được bỏ ẩn",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    }
                },
                error: function () {
                    commentDataTable.ajax.reload(null, false);
                    userDataTable.ajax.reload(null, false);
                    listSelectedComment = [];
                    if (isHide) {
                        swal({
                            title: "Thất bại!",
                            text: data.errorNumber + " bình luận chưa được ẩn",
                            timer: 2000,
                            type: "error"
                        });
                    } else {
                        swal({
                            title: "Thất bại!",
                            text: data.errorNumber + " bình luận chưa được bỏ ẩn",
                            timer: 2000,
                            type: "error"
                        });
                    }
                }
            })
        }

        //Approve comment
        function approveComment(commentId) {
            $.ajax({
                url: "/Analysis/SetCommentStatus",
                dataType: "json",
                type: "post",
                data: {
                    commentId: commentId,
                    statusId: 4
                },
                type: "post",
                success: function (data) {
                    commentDataTable.ajax.reload(null, false);
                    userDataTable.ajax.reload(null, false);
                    swal("Thành công!", "Đã chấp nhận bình luận", "success");
                },
                error: function () {
                    swal("Thất bại", "Chuyển trạng thái bình luận thất bại", "error");
                }
            })
        }

        // On page change unselect check box select all
        $('#tblAnalysisByComment').on('draw.dt', function () {
            if ($('#checkAllCommentTable').is(':checked')) {
                $('#checkAllCommentTable').prop('checked', false);
            };
            listSelectedComment.splice(0, listSelectedComment.length);
            $('#selectAllCommentTable').empty();
            $('#selectAllCommentTable').append("Đã chọn " + listSelectedComment.length + " bình luận &nbsp;<span class='caret'></span>");
        });


        //Function for User table
        //Filter User table
        function filterUserTable(loadFromStart) {
            if (loadFromStart == true) {
                userDataTable.ajax.reload();
            } else {
                userDataTable.ajax.reload(null, false);
            }

        }


        // User's comment detail
        function showUserCommentDetail(fbId) {
            listSelectedCommentDetailTable = [];
            $('#selectAllButtonUserCommentDetail').empty();
            $('#selectAllButtonUserCommentDetail').append("Đã chọn " + listSelectedCommentDetailTable.length + " bình luận &nbsp; <span class='caret'></span>");
            $('#userCommentDetailIntentDDL').prop('selectedIndex', 0);
            $('#userCommentDetailStatusDDL').prop('selectedIndex', 0);
            $('#userCommentDetailIsReadDDL').prop('selectedIndex', 0);
            userCommentDetailDataTable = $('#tblUserCommentDetail').DataTable({
                "iDisplayLength": 10,
                "bProcessing": true,
                "bServerSide": true,
                "sAjaxSource": "/Analysis/GetCommentByShopAndCondition",
                "destroy": true,
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "fbId", "value": fbId });
                    aoData.push({ "name": "intentId", "value": $('#userCommentDetailIntentDDL').val() });
                    aoData.push({ "name": "status", "value": $('#userCommentDetailStatusDDL').val() });
                    aoData.push({ "name": "isRead", "value": $('#userCommentDetailIsReadDDL').val() });
                    aoData.push({ "name": "startDate", "value": $('#startDateUserTable').val() });
                    aoData.push({ "name": "endDate", "value": $('#endDateUserTable').val().concat(" 23:59:59.000") });
                },
                "sDom": 'lrtip',
                "aoColumnDefs": [
                        { "mData": function (source) { return "<input type='checkbox' value='" + source.Id + "' onchange='selectRowUserCommentDetailTable(this)'>" }, "aTargets": [0], "width": "1%", "bSortable": false },
                        { "mData": function (source) { return "<a href='https://www.facebook.com/" + source.Id + "' target='_blank' onclick='setCommentIsRead(\"" + source.Id + "\")'>" + source.CommentContent + "</a>" }, "aTargets": [1], "width": "15%", "bSortable": false },
                        { "mData": function (source) { return "<a href='https://www.facebook.com/" + source.PostId + "' target='_blank' onclick='setPostIsRead(\"" + source.PostId + "\")'>" + source.PostContent + "</a>" }, "aTargets": [2], "width": "15%" },
                        {
                            "mData": function (source) {
                                var rs = "<select class='input-sm' onchange='setCommentIntent(\"" + source.Id + "\",this)'><option value='" + source.IntentId + "'>" + source.IntentName + "</option>";
                                for (var i = 0; i < listIntent.length; i++) {
                                    if (listIntent[i].Id != source.IntentId) {
                                        rs = rs + "<option value='" + (i + 1) + "'>" + listIntent[i].IntentName + "</option>";
                                    }
                                };
                                rs = rs + "</select>";
                                return rs;
                            }, "aTargets": [3], "width": "7%"
                        },
                        { "mData": function (source) { return FormatDateVN(source.DateCreated) }, "aTargets": [4], "width": "10%" },
                        { "mData": function (source) { return statusArray[source.Status - 1] }, "aTargets": [5], "width": "7%" },
                        { "mData": function (source) { if (source.IsRead == true) { return "<i class='fa fa-check-square-o' style='font-size:20px'></i>" } else { return null } }, "aTargets": [6], "width": "5%" },
                        {
                            "mData": function (source) {
                                var rs = "<div class='btn-group' style='height:100%'>";
                                if (source.Status == 1 || source.Status == 4) {
                                    rs = rs + "<button class='btn btn-sm btn-warning' onclick='hideComment(\"" + source.Id + "\",true)'>Ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 2) {
                                    rs = rs + "<button class='btn btn-sm btn-info' onclick='approveComment(\"" + source.Id + "\")'>Duyệt</button>" + "<button class='btn btn-sm btn-warning' onclick='hideComment(\"" + source.Id + "\",true)'>Ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 3) {
                                    rs = rs + "<button class='btn btn-sm btn-success' onclick='hideComment(\"" + source.Id + "\",false)'>Bỏ ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 5) {
                                    return null;
                                }
                                rs = rs + "</div>";
                                return rs;
                            }, "aTargets": [7], "width": "10%"
                        },
                ],
                "fnInitComplete": function (oSetting, json) {
                    $('#tblUserCommentDetail').removeAttr("style");
                },
                oLanguage: languageConfig
            });
            $('#tblUserCommentDetailModal').modal('show');
        }

        
        //Filter User detail table
        function filterUserDetailTable(loadFromStart) {
            listSelectedCommentDetailTable = [];
            $('#selectAllButtonUserCommentDetail').empty();
            $('#selectAllButtonUserCommentDetail').append("Đã chọn " + listSelectedCommentDetailTable.length + " bình luận&nbsp; <span class='caret'></span>");
            if (loadFromStart == true) {
                if (userCommentDetailDataTable != null) {
                    userCommentDetailDataTable.ajax.reload();
                }
            } else {
                if (userCommentDetailDataTable != null) {
                    userCommentDetailDataTable.ajax.reload(null, false);
                }
            }

        }

        //Select row user comment detail table
        function selectRowUserCommentDetailTable(checkbox) {
            if ($('#checkAllCommentDetailTable').is(':checked')) {
                $('#checkAllCommentDetailTable').prop('checked', false);
            }
            if ($(checkbox).is(':checked')) {
                $(checkbox).closest("tr").addClass("active");
                listSelectedCommentDetailTable.push(checkbox.value);
                console.log(listSelectedCommentDetailTable);
            } else {
                $(checkbox).closest("tr").removeClass("active");
                for (var i = 0; i < listSelectedCommentDetailTable.length; i++) {
                    if (listSelectedCommentDetailTable[i] == checkbox.value) {
                        listSelectedCommentDetailTable.splice(i, 1);
                    }
                }
                console.log(listSelectedCommentDetailTable);
            }
            $('#selectAllButtonUserCommentDetail').empty();
            $('#selectAllButtonUserCommentDetail').append("Đã chọn " + listSelectedCommentDetailTable.length + " bình luận &nbsp;<span class='caret'></span>");
        }

        //Select all user comment detail table
        function checkAllCommentDetailTbl() {
            $('#selectAllButtonUserCommentDetail').empty();
            if ($('#checkAllCommentDetailTable').is(':checked')) {
                listSelectedCommentDetailTable.splice(0, listSelectedCommentDetailTable.length);
                $('#tblUserCommentDetailModal').find("tbody > tr > td > input").each(function () {
                    $(this).parent().parent().addClass("active");
                    $(this).prop('checked', true);
                    listSelectedCommentDetailTable.push($(this).val());
                });
            } else {
                listSelectedCommentDetailTable.splice(0, listSelectedCommentDetailTable.length);
                $('#tblUserCommentDetail').find("tbody > tr > td > input").each(function () {
                    $(this).parent().parent().removeClass("active");
                    $(this).prop('checked', false);
                });
            }
            $('#selectAllButtonUserCommentDetail').append("Đã chọn " + listSelectedCommentDetailTable.length + " bình luận &nbsp; <span class='caret'></span>");
            console.log(listSelectedCommentDetailTable);
        }

        //On page chang in user comment detail table
        $('#tblUserCommentDetailModal').on('draw.dt', function () {
            if ($('#checkAllCommentDetailTable').is(':checked')) {
                $('#checkAllCommentDetailTable').prop('checked', false);
            };
            listSelectedCommentDetailTable.splice(0, listSelectedCommentDetailTable.length);
            $('#selectAllButtonUserCommentDetail').empty();
            $('#selectAllButtonUserCommentDetail').append("Đã chọn " + listSelectedCommentDetailTable.length + " bình luận &nbsp; <span class='caret'></span>");
        });

        //Delete all comment in user comment detail
        function deleteAllCommentDetail() {
            swal({
                title: "Bạn có chắc chắn xóa các bình luận?",
                text: "Bạn không thể khôi phục sau khi xóa!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Xóa",
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        url: "/Analysis/DeleteComment",
                        dataType: "json",
                        type: "post",
                        data: {
                            commentId: listSelectedCommentDetailTable
                        },
                        type: "post",
                        success: function (data) {
                            commentDataTable.ajax.reload(null, false);
                            userDataTable.ajax.reload(null, false);
                            if (userCommentDetailDataTable != null) {
                                userCommentDetailDataTable.ajax.reload(null, false);
                            }
                            listSelectedCommentDetailTable = [];
                            if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                                swal({
                                    title: "Đã xóa!",
                                    text: "Xóa " + data.totalComment + " bình luận thành công",
                                    timer: 2000,
                                    type: "success"
                                });
                            } else {
                                swal({
                                    title: "Thất bại!",
                                    text: data.errorNumber + " bình luận chưa được xóa",
                                    timer: 2000,
                                    type: "error"
                                });
                            }
                        },
                        error: function () {
                            commentDataTable.ajax.reload(null, false);
                            userDataTable.ajax.reload(null, false);
                            if (userCommentDetailDataTable != null) {
                                userCommentDetailDataTable.ajax.reload(null, false);
                            }
                            listSelectedCommentDetailTable = [];
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bình luận chưa được xóa",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    })
                }
            })
        }

        //Hide / Unhide all user comment detail table
        function hideAllCommentDetail(isHide) {
            $.ajax({
                url: "/Analysis/HideComment",
                dataType: "json",
                type: "post",
                async: false,
                data: {
                    commentId: listSelectedCommentDetailTable,
                    isHide: isHide
                },
                type: "post",
                success: function (data) {
                    commentDataTable.ajax.reload(null, false);
                    userDataTable.ajax.reload(null, false);
                    if (userCommentDetailDataTable != null) {
                        userCommentDetailDataTable.ajax.reload(null, false);
                    }
                    listSelectedCommentDetailTable = [];
                    if (isHide) {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            swal({
                                title: "Thành công!",
                                text: "Ẩn " + data.totalComment + " bình luận thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bình luận chưa được ẩn",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    } else {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            swal({
                                title: "Thành công!",
                                text: "Bỏ ẩn " + data.totalComment + " bình luận thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bình luận chưa được bỏ ẩn",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    }
                },
                error: function () {
                    commentDataTable.ajax.reload(null, false);
                    userDataTable.ajax.reload(null, false);
                    if (userCommentDetailDataTable != null) {
                        userCommentDetailDataTable.ajax.reload(null, false);
                    }
                    listSelectedCommentDetailTable = [];
                    if (isHide) {
                        swal({
                            title: "Thất bại!",
                            text: data.errorNumber + " bình luận chưa được ẩn",
                            timer: 2000,
                            type: "error"
                        });
                    } else {
                        swal({
                            title: "Thất bại!",
                            text: data.errorNumber + " bình luận chưa được bỏ ẩn",
                            timer: 2000,
                            type: "error"
                        });
                    }
                }
            })
        }


        //Function for Post Table
        //Filter Post Table
        function filterPostTable(loadFromStart) {
            listSelectedPost = [];
            if (loadFromStart == true) {
                if (postDataTable != null) {
                    postDataTable.ajax.reload();
                }
            } else {
                if (postDataTable != null) {
                    postDataTable.ajax.reload(null, false);
                }
            }
        }

        // Selected a post
        function checkBoxCheckedPostTbl(checkbox) {
            if ($('#checkAllPostTbl').is(':checked')) {
                $('#checkAllPostTbl').prop('checked', false);
            }
            if ($(checkbox).is(':checked')) {
                $(checkbox).closest("tr").addClass("active");
                listSelectedPost.push(checkbox.value);
                console.log(listSelectedPost);
            } else {
                $(checkbox).closest("tr").removeClass("active");
                for (var i = 0; i < listSelectedPost.length; i++) {
                    if (listSelectedPost[i] == checkbox.value) {
                        listSelectedPost.splice(i, 1);
                    }
                }
                console.log(listSelectedPost);
            }
            $('#selectAllButtonPostTbl').empty();
            $('#selectAllButtonPostTbl').append("Đã chọn " + listSelectedPost.length + " bài đăng &nbsp;<span class='caret'></span>");
        }

        //Check all comment
        function checkAllPost() {
            $('#selectAllButtonPostTbl').empty();
            if ($('#checkAllPostTbl').is(':checked')) {
                listSelectedPost.splice(0, listSelectedPost.length);
                $('#tblAnalysisPostByPage').find("tbody > tr > td > input").each(function () {
                    $(this).parent().parent().addClass("active");
                    $(this).prop('checked', true);
                    listSelectedPost.push($(this).val());
                });
            } else {
                listSelectedPost.splice(0, listSelectedPost.length);
                $('#tblAnalysisPostByPage').find("tbody > tr > td > input").each(function () {
                    $(this).parent().parent().removeClass("active");
                    $(this).prop('checked', false);
                });
            }
            $('#selectAllButtonPostTbl').append("Đã chọn " + listSelectedPost.length + " bài đăng &nbsp;<span class='caret'></span>");
            console.log(listSelectedPost);
        }

        $('#tblAnalysisPostByPage').on('draw.dt', function () {
            if ($('#checkAllPostTbl').is(':checked')) {
                $('#checkAllPostTbl').prop('checked', false);
            };
            listSelectedPost.splice(0, listSelectedPost.length);
            $('#selectAllButtonPostTbl').empty();
            $('#selectAllButtonPostTbl').append("Đã chọn " + listSelectedPost.length + " bài đăng &nbsp;<span class='caret'></span>");
        });

        //Set post intent onchange
        function setPostIntent(postId, intentList) {
            $.ajax({
                url: "/Analysis/SetPostIntent",
                dataType: "json",
                type: "post",
                data: {
                    postId: postId,
                    intentId: intentList.value
                },
                type: "post",
                success: function (data) {
                    toastr.success("Cập nhật thành công");
                },
                error: function () {
                    toastr.error("Cập nhật thất bại");
                }
            })
        }

        //Delete post by id
        function deletePost(postId) {
            swal({
                title: "Bạn có chắc chắn xóa bình luận?",
                text: "Bạn không thể khôi phục sau khi xóa!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Xóa",
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        url: "/Analysis/DeletePost",
                        dataType: "json",
                        type: "post",
                        async: false,
                        data: {
                            PostId: [postId]
                        },
                        type: "post",
                        success: function (data) {
                            if (data.errorNumber == 0) {
                                commentDataTable.ajax.reload(null, false);
                                userDataTable.ajax.reload(null, false);
                                postDataTable.ajax.reload(null, false);
                                swal({
                                    title: "Đã xóa!",
                                    text: "Đã xóa bài đăng thành công",
                                    timer: 2000,
                                    type: "success"
                                });
                            } else {
                                swal({
                                    title: "Thất bại!",
                                    text: "Xóa bài đăng thất bại",
                                    timer: 2000,
                                    type: "error"
                                });
                            }
                        },
                        error: function () {
                            swal({
                                title: "Thất bại!",
                                text: "Xóa bài đăng thất bại",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    })
                }
            });
        }

        //Delete all comment by id
        function deleteAllPost() {
            swal({
                title: "Bạn có chắc chắn xóa các bình luận?",
                text: "Bạn không thể khôi phục sau khi xóa!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Xóa",
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        url: "/Analysis/DeletePost",
                        dataType: "json",
                        type: "post",
                        async: false,
                        data: {
                            PostId: listSelectedPost
                        },
                        type: "post",
                        success: function (data) {
                            commentDataTable.ajax.reload(null, false);
                            userDataTable.ajax.reload(null, false);
                            postDataTable.ajax.reload(null, false);
                            listSelectedPost = [];
                            if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                                swal({
                                    title: "Đã xóa!",
                                    text: "Xóa " + data.totalPost + " bài đăng thành công",
                                    timer: 2000,
                                    type: "success"
                                });
                            } else {
                                swal({
                                    title: "Thất bại!",
                                    text: data.errorNumber + " bài đăng chưa được xóa",
                                    timer: 2000,
                                    type: "error"
                                });
                            }
                            $('#selectAllButtonPostTbl').append("Đã chọn " + listSelectedPost.length + " bài đăng&nbsp; <span class='caret'></span>");
                        },
                        error: function () {
                            commentDataTable.ajax.reload(null, false);
                            userDataTable.ajax.reload(null, false);
                            postDataTable.ajax.reload(null, false);
                            listSelectedPost = [];
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bài đăng chưa được xóa",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    })
                }
            })
        }
        
        //Hide / Unhide Post by Id
        function hidePost(postId, isHide) {
            $.ajax({
                url: "/Analysis/HidePost",
                dataType: "json",
                type: "post",
                data: {
                    PostId: [postId],
                    isHide: isHide
                },
                type: "post",
                success: function (data) {
                    if (isHide) {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            commentDataTable.ajax.reload(null, false);
                            postDataTable.ajax.reload(null, false);
                            swal({
                                title: "Đã ẩn!",
                                text: "Ẩn bài đăng thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: "Ẩn bài đăng thất bại",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    } else {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            commentDataTable.ajax.reload(null, false);
                            postDataTable.ajax.reload(null, false);
                            swal({
                                title: "Đã bỏ ẩn!",
                                text: "Bỏ ẩn bài đăng thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: "Bỏ ẩn bài đăng thất bại",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    }
                },
                error: function () {
                    if (isHide) {
                        swal({
                            title: "Thất bại!",
                            text: "Ẩn bình luận thất bại",
                            timer: 2000,
                            type: "error"
                        });
                    } else {
                        swal({
                            title: "Thất bại!",
                            text: "Bỏ ẩn bình luận thất bại",
                            timer: 2000,
                            type: "error"
                        });
                    }
                }
            })
        }
        
        //Hide / Unhide all Comment by Id
        function hideAllPost(isHide) {
            $.ajax({
                url: "/Analysis/HidePost",
                dataType: "json",
                type: "post",
                async: false,
                data: {
                    PostId: listSelectedPost,
                    isHide: isHide
                },
                type: "post",
                success: function (data) {
                    commentDataTable.ajax.reload(null, false);
                    postDataTable.ajax.reload(null, false);
                    listSelectedPost = [];
                    if (isHide) {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            swal({
                                title: "Thành công!",
                                text: "Ẩn " + data.totalPost + " bài đăng thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bài đăng chưa được ẩn",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    } else {
                        if (data.errorNumber == 0 || data.errorNumber == "undefined") {
                            swal({
                                title: "Thành công!",
                                text: "Bỏ ẩn " + data.totalPost + " bài đăng thành công",
                                timer: 2000,
                                type: "success"
                            });
                        } else {
                            swal({
                                title: "Thất bại!",
                                text: data.errorNumber + " bài đăng chưa được bỏ ẩn",
                                timer: 2000,
                                type: "error"
                            });
                        }
                    }
                    $('#selectAllButtonPostTbl').append("Đã chọn " + listSelectedPost.length + " bài đăng&nbsp; <span class='caret'></span>");
                },
                error: function () {
                    commentDataTable.ajax.reload(null, false);
                    postDataTable.ajax.reload(null, false);
                    listSelectedPost = [];
                    if (isHide) {
                        swal({
                            title: "Thất bại!",
                            text: data.errorNumber + " bài đăng chưa được ẩn",
                            timer: 2000,
                            type: "error"
                        });
                    } else {
                        swal({
                            title: "Thất bại!",
                            text: data.errorNumber + " bài đăng chưa được bỏ ẩn",
                            timer: 2000,
                            type: "error"
                        });
                    }
                }
            })
        }
        
        //Load Intent
        function loadIntent() {
            $.ajax({
                url: "/Analysis/GetAllIntent",
                dataType: "json",
                type: "post",
                async: false,
                success: function (data) {
                    listIntent = data;
                    $('#intentCommentTable').empty();
                    $('#intentCommentTable').append("<option value='all'>Tất cả</option>");
                    $('#userCommentDetailIntentDDL').empty();
                    $('#userCommentDetailIntentDDL').append("<option value='all'>Tất cả</option>");
                    for (var i = 0; i < data.length; i++) {
                        $('#userCommentDetailIntentDDL').append("<option value='" + data[i].Id + "'>" + data[i].IntentName + "</option>");
                        $('#intentCommentTable').append("<option value='" + data[i].Id + "'>" + data[i].IntentName + "</option>");
                    }
                },
                error: function () {
                    $('#intentCommentTable').empty();
                    $('#userCommentDetailIntentDDL').empty();
                }
            })
        }

        //Function format date time to vn format
        function FormatDateVN(date) {
            var milli = date.replace(/\/Date\((-?\d+)\)\//, '$1');
            var d = new Date(parseInt(milli));
            return d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
        }

    </script>


}
