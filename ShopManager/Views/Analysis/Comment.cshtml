
@{
    ViewBag.Title = "Comment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!--Table Analysis comment-->
<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Thống kê bình luận</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-sm-2 m-b-xs">
                        <label class="font-noraml">Mục đích</label>
                        <select id="intentDDL" class="input-sm form-control input-s-sm inline"></select>
                    </div>
                    <div class="col-sm-2 m-b-xs">
                        <label class="font-noraml">Trạng thái</label>
                        <select id="statusDDL" class="input-sm form-control input-s-sm inline">
                            <option value="">Tất cả</option>
                            <option value="1">Đang hiển thị</option>
                            <option value="2">Đang cảnh báo</option>
                            <option value="3">Đã ẩn</option>
                            <option value="4">Đã duyệt</option>
                            <option value="5">Đã xóa</option>
                        </select>
                    </div>
                    <div class="col-sm-2 m-b-xs">
                        <label class="font-noraml">Đã đọc</label>
                        <select id="isReadDDL" class="input-sm form-control input-s-sm inline">
                            <option value="">Tất cả</option>
                            <option value="true">Đã đọc</option>
                            <option value="false">Chưa đọc</option>
                        </select>
                    </div>
                    <div class="col-sm-3 m-b-xs">
                        <div class="form-group" id="dateRange">
                            <label class="font-noraml">Thời gian</label>
                            <div class="input-daterange input-group" id="datepicker">
                                <input type="text" id="startDate" class="input-sm form-control" name="start" value="" readonly>
                                <span class="input-group-addon">to</span>
                                <input type="text" id="endDate" class="input-sm form-control" name="end" value="" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3 m-b-xs">
                        <button class="col-sm-6 btn btn-outline btn-success pull-right" style="margin-top:22px" onclick="filterComment()">Lọc</button>
                    </div>

                </div>

                <div class="table-responsive">
                    <div class="btn-group">
                        <button id="selectAllButton" data-toggle="dropdown" class="btn btn-default dropdown-toggle">Đã chọn 0 bình luận<span class="caret"></span></button>
                        <ul class="dropdown-menu">
                            <li><a href="javascript:void(0)" onclick="hideAllComment(true)">Ẩn những bình luận đã chọn</a></li>
                            <li><a href="javascript:void(0)" onclick="hideAllComment(false)">Bỏ ẩn những bình luận đã chọn</a></li>
                            <li><a href="#">Xóa những comment đã chọn</a></li>
                            <li class="divider"></li>
                            <li><a href="#">Separated link</a></li>
                        </ul>
                    </div>
                    <table class="table table-bordered table-hover" id="tblAnalysisByComment">
                        <thead>
                            <tr>
                                <th><input id="checkAll" type="checkbox" onchange="checkAllComment()"></th>
                                <th>Bình luận</th>
                                <th>Bài đăng</th>
                                <th>Người đăng</th>
                                <th>Mục đích</th>
                                <th>Thời gian</th>
                                <th>Trạng thái</th>
                                <th>Đã đọc</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th>Bình luận</th>
                                <th>Bài đăng</th>
                                <th>Người đăng</th>
                                <th>Mục đích</th>
                                <th>Thời gian</th>
                                <th>Trạng thái</th>
                                <th>Đã đọc</th>
                                <th>Thao tác</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>
<!--./Table Analysis comment-->


@section CustomCSS
{
    @Styles.Render("~/Toastr-style")
    @Styles.Render("~/DataTable-CSS")
    @Styles.Render("~/Data-picker-CSS")
}

@section CustomJS
{
    @Scripts.Render("~/DataTable-JS")
    <!--Toastr JS-->
    @Scripts.Render("~/Toastr")

    <script>
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        today = yyyy + '/' + mm + '/' + dd;
        var firstDay = yyyy + '/' + mm + '/' + '01';

        $('#startDate').attr("value", firstDay);
        $('#endDate').attr("value", today);
    </script>
    @Scripts.Render("~/Data-picker-JS")
    <script>

        $('#dateRange .input-daterange').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            autoclose: true,
            format: "yyyy/mm/dd"
        });
        var listSelectedComment = [];
        var statusArray = ["Đang hiện", "Cảnh báo", "Đã ẩn", "Đã duyệt", "Đã xóa"];
        var listIntent;
        var commentDataTable;
        var languageConfig = {
            "oPaginate": {
                "sNext": "Tiếp",
                "sLast": "Cuối",
                "sPrevious": "Trước",
                "sFirst": "Đầu"
            },
            "sInfo": "Kết quả từ _START_ đến _END_ trong số _TOTAL_",
            "sInfoEmpty": "Chưa có dữ liệu",
            "sEmptyTable": "Chưa có dữ liệu",
            "sInfoThousands": ".",
            "sLoadingRecords": "Đang tải ...",
            "sProcessing": "Đang xử lý ...",
            "sSearch": "Tìm kiếm:",
            "sZeroRecords": "Không tìm thấy kết quả",
            "sInfoFiltered": " - lọc ra từ _MAX_ kết quả",
            "sLengthMenu": "Hiển thị _MENU_ kết quả",
        };
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "progressBar": false,
            "preventDuplicates": false,
            "positionClass": "toast-top-right",
            "onclick": null,
            "showDuration": "100",
            "hideDuration": "100",
            "timeOut": "3000",
            "extendedTimeOut": "500",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        $(document).ready(function () {
            loadIntent();
            commentDataTable = $('#tblAnalysisByComment').DataTable({
                "iDisplayLength": 10,
                "bProcessing": true, "bServerSide": true,
                "sAjaxSource": "/Analysis/GetCommentByShopAndCondition",
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "intentId", "value": $('#intentDDL').val() });
                    aoData.push({ "name": "status", "value": $('#statusDDL').val() });
                    aoData.push({ "name": "isRead", "value": $('#isReadDDL').val() });
                    aoData.push({ "name": "startDate", "value": $('#startDate').val() });
                    aoData.push({ "name": "endDate", "value": $('#endDate').val().concat(" 23:59:59.000") });
                },
                "sDom": 'lrtip',
                "aoColumnDefs": [
                        { "mData": function (source) { return "<input type='checkbox' value='" + source.Id + "' onchange='checkBoxChecked(this)'>" }, "aTargets": [0], "width": "1%", "bSortable": false },
                        { "mData": function (source) { return "<a href='https://www.facebook.com/" + source.Id + "' target='_blank' onclick='setCommentIsRead(\"" + source.Id + "\")'>" + source.CommentContent + "</a>" }, "aTargets": [1], "width": "15%", "bSortable": false },
                        { "mData": function (source) { return "<a href='https://www.facebook.com/" + source.PostId + "' target='_blank' onclick='setPostIsRead(\"" + source.PostId + "\")'>" + source.PostContent + "</a>" }, "aTargets": [2], "width": "15%" },
                        {
                            "mData": function (source) {
                                var rs = "<a href='https://www.facebook.com/" + source.SenderFbId + "' target='_blank'>" + source.SenderName + "</a>";
                                if (source.IsCustomer == true) {
                                    rs = rs + " (Khách hàng)"
                                };
                                return rs;

                            }, "aTargets": [3], "width": "15%"
                        },
                        {
                            "mData": function (source) {
                                var rs = "<select class='input-sm' onchange='setIntent(\"" + source.Id + "\",this)'><option value='" + source.IntentId + "'>" + source.IntentName + "</option>";
                                for (var i = 0; i < listIntent.length; i++) {
                                    if (listIntent[i].Id != source.IntentId) {
                                        rs = rs + "<option value='" + (i + 1) + "'>" + listIntent[i].IntentName + "</option>";
                                    }
                                };
                                rs = rs + "</select>";
                                return rs;
                            }, "aTargets": [4], "width": "7%"
                        },
                        { "mData": function (source) { return FormatDateVN(source.DateCreated) }, "aTargets": [5], "width": "10%" },
                        { "mData": function (source) { return statusArray[source.Status - 1] }, "aTargets": [6], "width": "7%" },
                        { "mData": function (source) { if (source.IsRead == true) { return "<button class='btn btn-sm btn-primary col-sm-12' type='button'>Đã đọc</button>" } else { return "<button class='btn btn-sm btn-warning col-sm-12' type='button'>Chưa đọc</button>" } }, "aTargets": [7], "width": "8%" },
                        {
                            "mData": function (source) {
                                var rs = "<div class='btn-group' style='height:100%'>";
                                if (source.Status == 1 || source.Status == 4) {
                                    rs = rs + "<button class='btn btn-sm btn-warning' onclick='hideComment(\"" + source.Id + "\",true)'>Ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 2) {
                                    rs = rs + "<button class='btn btn-sm btn-info' onclick='approveComment(\"" + source.Id + "\")'>Duyệt</button>" + "<button class='btn btn-sm btn-warning' onclick='hideComment(\"" + source.Id + "\",true)'>Ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 3) {
                                    rs = rs + "<button class='btn btn-sm btn-success' onclick='hideComment(\"" + source.Id + "\",false)'>Bỏ ẩn</button>" + "<button class='btn btn-sm btn-danger' onclick='deleteComment(\"" + source.Id + "\")'>Xóa</button>";
                                }
                                if (source.Status == 5) {
                                    return null;
                                }
                                rs = rs + "</div>";
                                return rs;
                            }, "aTargets": [8], "width": "10%"
                        },
                ],
                "fnInitComplete": function (oSetting, json) {
                    $('#tblAnalysisByComment').removeAttr("style");
                },
                oLanguage: languageConfig
            })
        })
        $('#dateRange .input-daterange').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            autoclose: true,
            format: "yyyy/mm/dd"
        });



        function filterComment() {
            commentDataTable.ajax.reload();
        }

        function FormatDateVN(date) {
            var milli = date.replace(/\/Date\((-?\d+)\)\//, '$1');
            var d = new Date(parseInt(milli));
            return d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
        }



        //Set Commnet is read
        function setCommentIsRead(commentId) {
            $.ajax({
                url: "/Analysis/SetIsRead",
                dataType: "json",
                type: "post",
                data: { commentId: commentId },
                success: function (data) {
                    if (data == true) {
                        commentDataTable.ajax.reload(null, false);
                    } else {
                        alert(data)
                    }

                },
                error: function () {
                    alert("Set status failed!");
                }
            })
        }

        //Set Post is read
        function setPostIsRead(postId) {
            $.ajax({
                url: "/Analysis/SetPostIsRead",
                dataType: "json",
                type: "post",
                data: { postId: postId },
                success: function (data) {
                    if (data == true) {
                        commentDataTable.ajax.reload(null, false);
                    } else {
                        alert(data)
                    }

                },
                error: function () {
                    alert("Set status failed!");
                }
            })
        }

        //Load Intent
        function loadIntent() {
            $.ajax({
                url: "/Analysis/GetAllIntent",
                dataType: "json",
                type: "post",
                async: false,
                success: function (data) {
                    listIntent = data;
                    $('#intentDDL').empty();
                    $('#intentDDL').append("<option value='all'>Tất cả</option>");
                    for (var i = 0; i < data.length; i++) {
                        $('#intentDDL').append("<option value='" + data[i].Id + "'>" + data[i].IntentName + "</option>");
                    }
                },
                error: function () {
                    $('#intentDDL').empty();
                }
            })
        }

        //Set intent onchange
        function setIntent(commentId, intentList) {
            $.ajax({
                url: "/Analysis/SetIntent",
                dataType: "json",
                type: "post",
                data: {
                    commentId: commentId,
                    intentId: intentList.value
                },
                type: "post",
                success: function (data) {
                    toastr.success("Cập nhật thành công");
                },
                error: function () {
                    toastr.error("Cập nhật thất bại");
                }
            })
        }

        //Delete comment by id
        function deleteComment(commentId) {
            $.ajax({
                url: "/Analysis/DeleteComment",
                dataType: "json",
                type: "post",
                data: {
                    commentId: commentId
                },
                type: "post",
                success: function (data) {
                    toastr.success("Xóa bình luận thành công");
                    commentDataTable.ajax.reload();
                },
                error: function () {
                    toastr.error("Xóa bình luận thất bại");
                }
            })
        }

        //Hide / Unhide Comment by Id
        function hideComment(commentId, isHide) {
            $.ajax({
                url: "/Analysis/HideComment",
                dataType: "json",
                type: "post",
                data: {
                    commentId: commentId,
                    isHide: isHide
                },
                type: "post",
                success: function (data) {
                    toastr.success("Ẩn bình luận thành công");
                    commentDataTable.ajax.reload();
                },
                error: function () {
                    toastr.error("Ẩn bình luận thất bại");
                }
            })
        }

        //Hide / Unhide all Comment by Id
        function hideAllComment(isHide) {
            $.ajax({
                url: "/Analysis/HideComment",
                dataType: "json",
                type: "post",
                async: false,
                data: {
                    commentId: listSelectedComment,
                    isHide: isHide
                },
                type: "post",
                success: function (data) {
                    if (data.length == 0) {
                        toastr.success("Ẩn " + listSelectedComment.length + " bình luận thành công");
                        commentDataTable.ajax.reload();
                    } else {
                        toastr.warning(data.length + " bình luận chưa được ẩn !");
                        commentDataTable.ajax.reload();
                    }
                },
                error: function () {
                    toastr.error("Ẩn bình luận thất bại");
                }
            })
        }

        //Approve comment
        function approveComment(commentId) {
            $.ajax({
                url: "/Analysis/SetCommentStatus",
                dataType: "json",
                type: "post",
                data: {
                    commentId: commentId,
                    statusId: 4
                },
                type: "post",
                success: function (data) {
                    toastr.success("Đã chấp nhận bình luận");
                    commentDataTable.ajax.reload();
                },
                error: function () {
                    toastr.error("Chuyển trạng thái bình luận thất bại");
                }
            })
        }

        //Function Selected comment
        function checkBoxChecked(checkbox) {
            if ($('#checkAll').is(':checked')) {
                $('#checkAll').prop('checked', false);
            }
            if ($(checkbox).is(':checked')) {
                $(checkbox).closest("tr").addClass("active");
                listSelectedComment.push(checkbox.value);
                console.log(listSelectedComment);
            } else {
                $(checkbox).closest("tr").removeClass("active");
                for (var i = 0; i < listSelectedComment.length; i++) {
                    if (listSelectedComment[i] == checkbox.value) {
                        listSelectedComment.splice(i, 1);
                    }
                }
                console.log(listSelectedComment);
            }
        }

        // On page change unselect check box select all
        $('#tblAnalysisByComment').on('page.dt', function () {
            if ($('#checkAll').is(':checked')) {
                $('#checkAll').prop('checked', false);
            };
            listSelectedComment.splice(0, listSelectedComment.length);
        });

        //Check all comment
        function checkAllComment() {
            $('#selectAllButton').empty();
            if ($('#checkAll').is(':checked')) {
                listSelectedComment.splice(0, listSelectedComment.length);
                $('#tblAnalysisByComment').find("tbody > tr > td > input").each(function () {
                    $(this).parent().parent().addClass("active");
                    $(this).prop('checked', true);
                    listSelectedComment.push($(this).val());
                });
            } else {
                listSelectedComment.splice(0, listSelectedComment.length);
                $('#tblAnalysisByComment').find("tbody > tr > td > input").each(function () {
                    $(this).parent().parent().removeClass("active");
                    $(this).prop('checked', false);
                });
            }
            $('#selectAllButton').append("Đã chọn " + listSelectedComment.length + " bình luận <span class='caret'></span>");
            console.log(listSelectedComment);
        }


    </script>


}